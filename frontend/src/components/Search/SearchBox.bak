// *https://www.registers.service.gov.uk/registers/country/use-the-api*
import fetch from 'cross-fetch';
import React from 'react';
import TextField from '@material-ui/core/TextField';
import Autocomplete from '@material-ui/lab/Autocomplete';
import CircularProgress from '@material-ui/core/CircularProgress';

function sleep(delay = 0) {
  return new Promise((resolve) => {
    setTimeout(resolve, delay);
  });
}

export default function Searchbox() {
  const [open, setOpen] = React.useState(false);
  const [options, setOptions] = React.useState([]);
  const loading = open && options.length === 0;
  const [input, setInput] = React.useState();
  

  React.useEffect(() => {
    let active = true;

    if (!loading) {
      return undefined;
    }

    (async () => {
    //   const response = await fetch('https://country.register.gov.uk/records.json?page-size=200');
      const response = await fetch('https://asia-east2-unigc-eea69.cloudfunctions.net/api/search/A');
      await sleep(1e3); // For demo purposes.
      const courses = await response.json();

      if (active) {
        console.log(courses);
        setOptions(Object.keys(courses).map((key) => courses[key]));
        console.log(Object.keys(courses).map((key) => courses[key]));
      }
    })();

    return () => {
      active = false;
    };
  }, [loading]);

  React.useEffect(() => {
    if (!open) {
      setOptions([]);
    }
  }, [open]);

  return (
    <Autocomplete
      id="search-box"
      style={{ width: 300 }}
      open={open}
      onOpen={() => {
        setOpen(true);
      }}
      onClose={() => {
        setOpen(false);
      }}
      onChange={(event, value) => console.log(value)}
      onInputChange={(event, value) => console.log(value) }
      getOptionSelected={(option, value) => option.code === value.code}
      getOptionLabel={(option) => option.code}
      options={options}
      loading={loading}
      renderInput={(params) => (
        <TextField
          {...params}
          label="Course search"
          variant="outlined"
          InputProps={{
            ...params.InputProps,
            endAdornment: (
              <React.Fragment>
                {loading ? <CircularProgress color="inherit" size={20} /> : null}
                {params.InputProps.endAdornment}
              </React.Fragment>
            ),
          }}
        />
      )}
    />
  );
}